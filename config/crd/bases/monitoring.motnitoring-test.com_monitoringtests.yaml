---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: monitoringtests.monitoring.motnitoring-test.com
spec:
  group: monitoring.motnitoring-test.com
  names:
    kind: MonitoringTest
    listKind: MonitoringTestList
    plural: monitoringtests
    shortNames:
    - testMonitoring
    singular: monitoringtest
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Domain name of the Cumulocity IoT Edge
      jsonPath: .spec.domain
      name: Domain Name
      type: string
    - description: Deployed version of the Cumulocity IoT Edge
      jsonPath: .status.version
      name: Version
      type: string
    - description: Current state of the deployment
      jsonPath: .status.state
      name: Status
      type: string
    - description: Time since the Cumulocity IoT Edge was last successfully deployed
        or updated
      format: date
      jsonPath: .status.lastDeployedTime
      name: Last Deployed
      type: date
    - description: Generation of the CumulocityIoTEdge resource which is deployed
      jsonPath: .status.deployedGeneration
      name: Deployed Generation
      type: integer
    - description: Latest generation of the CumulocityIoTEdge resource
      jsonPath: .metadata.generation
      name: Latest Generation
      type: integer
    - description: Generation of the CumulocityIoTEdge resource which is being deployed
      jsonPath: .status.deployingGeneration
      name: Deploying Generation
      type: integer
    - description: Warning messages generated while validating the CumulocityIoTEdge
        resource
      jsonPath: .status.warnings
      name: Warnings
      priority: 1
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MonitoringTest is the Schema for the monitoringtests API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MonitoringTestSpec defines the desired state of MonitoringTest
            properties:
              containerPort:
                description: Port defines the port that will be used to init the container
                  with the image
                format: int32
                type: integer
              email:
                type: string
              size:
                description: Foo is an example field of MonitoringTest. Edit monitoringtest_types.go
                  to remove/update Size defines the number of Memcached instances
                format: int32
                maximum: 5
                minimum: 1
                type: integer
            type: object
          status:
            description: MonitoringTestStatus defines the observed state of MonitoringTest
            properties:
              conditions:
                description: Conditions store the status conditions of the Memcached
                  instances
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
